{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/layout.component.ts","./src/app/account/layout.component.html","./src/app/account/login.component.ts","./src/app/account/login.component.html","./src/app/account/register.component.ts","./src/app/account/register.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\n\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: 'login', component: LoginComponent },\n            { path: 'register', component: RegisterComponent },\n           \n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AccountRoutingModule { }","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        AccountRoutingModule\n    ],\n    declarations: [\n        LayoutComponent,\n        LoginComponent,\n        RegisterComponent\n       \n    ]\n})\nexport class AccountModule { }","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {\n        // redirect to home if already logged in\n        if (this.accountService.accountValue) {\n            this.router.navigate(['/']);\n        }\n    }\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-8 offset-sm-2 mt-5\">\n            <div class=\"card m-3\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\nimport { ApiResponseModel, LoginRequestModel } from '@app/_models';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            UserName: ['', [Validators.required]],\n            PasswordHash: ['', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n        this.loading = true;\n        this.accountService.login(this.form.value as LoginRequestModel)\n            .pipe(first())\n            .subscribe({\n                next: (loginDetail: ApiResponseModel) => {\n                    if (loginDetail.StatusCode == 404) {\n                        this.alertService.error(loginDetail.Result);\n                        this.loading = false;\n                    } else {\n                        const returnUrl = '/admin';\n                        this.router.navigateByUrl(returnUrl);\n                    }\n                    // get return url from query parameters or default to home page\n\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n}","<h3 class=\"card-header\">Login</h3>\n<div class=\"card-body\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Username</label>\n            <input type=\"text\" formControlName=\"UserName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.UserName.errors }\" />\n            <div *ngIf=\"submitted && f.UserName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.UserName.errors.required\">Username is required</div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" formControlName=\"PasswordHash\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.PasswordHash.errors }\" />\n            <div *ngIf=\"submitted && f.PasswordHash.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.PasswordHash.errors.required\">Password is required</div>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n            <!-- <div class=\"form-group col text-right\">\n                <a routerLink=\"../forgot-password\" class=\"btn btn-link pr-0\">Forgot Password?</a>\n            </div> -->\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\nimport { ApiResponseModel } from '@app/_models';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            userName: ['', Validators.required],\n            PasswordHash: ['', [Validators.required, Validators.minLength(6)]],\n            acceptTerms: [false, Validators.requiredTrue]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n        // reset alerts on submit\n        this.alertService.clear();\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n        this.loading = true;\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: (data: ApiResponseModel) => {\n                    if (data.StatusCode == 409) {\n                        this.alertService.error(data.message);\n                        this.loading = false;\n                    }\n                    else {\n                        this.alertService.success('Registration successful', { keepAfterRouteChange: false });\n                        this.router.navigate(['../login'], { relativeTo: this.route });\n                    }\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n}","<h3 class=\"card-header\">Register</h3>\n<div class=\"card-body\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-5\">\n                <label>User Name</label>\n                <input type=\"text\" formControlName=\"userName\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.userName.errors }\" />\n                <div *ngIf=\"submitted && f.userName.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.userName.errors.required\">User Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group col\">\n                <label>Password</label>\n                <input type=\"password\" formControlName=\"PasswordHash\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.PasswordHash.errors }\" />\n                <div *ngIf=\"submitted && f.PasswordHash.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.PasswordHash.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.PasswordHash.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"form-group form-check\">\n            <input type=\"checkbox\" formControlName=\"acceptTerms\" id=\"acceptTerms\" class=\"form-check-input\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.acceptTerms.errors }\" />\n            <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\n            <div *ngIf=\"submitted && f.acceptTerms.errors\" class=\"invalid-feedback\">Accept Ts & Cs is required</div>\n        </div>\n        <div class=\"form-group\">\n            <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Register\n            </button>\n            <a routerLink=\"../login\" href=\"\" class=\"btn btn-link\">Cancel</a>\n        </div>\n    </form>\n</div>"],"names":[],"sourceRoot":"webpack:///"}