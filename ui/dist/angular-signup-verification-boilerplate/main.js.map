{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/_components/alert.component.ts","./src/app/_components/alert.component.html","./src/app/_components/index.ts","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/index.ts","./src/app/_models/account.ts","./src/app/_models/alert.ts","./src/app/_models/api-response.ts","./src/app/_models/fuel-quote-request.ts","./src/app/_models/fuel-quote.ts","./src/app/_models/index.ts","./src/app/_models/login.model.ts","./src/app/_models/role.ts","./src/app/_services/account.service.ts","./src/app/_services/alert.service.ts","./src/app/_services/fuel-quote.service.ts","./src/app/_services/index.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from '@app/_models';\nimport { AlertService } from '@app/_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription: Subscription;\n    routeSubscription: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // remove 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        if (this.fade) {\n            // fade out alert\n            alert.fade = true;\n\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter(x => x !== alert);\n            }, 250);\n        } else {\n            // remove alert\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }\n    }\n\n    cssClasses(alert: Alert) {\n        if (!alert) return;\n\n        const classes = ['alert', 'alert-dismissable'];\n                \n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning'\n        }\n\n        classes.push(alertTypeClass[alert.type]);\n\n        if (alert.fade) {\n            classes.push('fade');\n        }\n\n        return classes.join(' ');\n    }\n}","<div *ngIf=\"alerts.length\" class=\"container\">\n    <div class=\"m-3\">\n        <div *ngFor=\"let alert of alerts\" class=\"{{cssClasses(alert)}}\">\n            <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n            <span [innerHTML]=\"alert.message\"></span>\n        </div>\n    </div>\n</div>\n","export * from './alert.component';\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const account = this.accountService.accountValue; \n        if (account) {\n            if (route.data.roles && !route.data.roles.includes(account.Role)) {\n                // role not authorized so redirect to home page\n                this.router.navigate(['/admin']);\n                return false;\n            }\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url \n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n   \n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].includes(err.status) && this.accountService.accountValue) {\n                // auto logout if 401 or 403 response returned from api\n                this.accountService.logout();\n            }\n\n            const error = (err && err.error && err.error.message) || err.statusText;\n            console.error(err);\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.guard';\nexport * from './error.interceptor';","import { Role } from './role';\n\nexport class Account {\n    Id: number;\n    UserName: string;\n    FullName: string;\n    Address1: string;\n    Address2: string;\n    City: string;\n    State: string;\n    Zipcode: string;\n    Role: Role;\n    jwtToken?: string;\n}","export class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","export class ApiResponseModel {\r\n    StatusCode: number;\r\n    message: string;\r\n    Result: any;\r\n}","export interface FuelQuoteRequestModel {\r\n    ClientId: number;\r\n    RoleId: number;\r\n}","export interface FuelQuote {\r\n    FuelId: number;\r\n    ClientId: number;\r\n    GallonsRequested: number;\r\n    DiliveryAddress: string;\r\n    DeliveryDate: Date;\r\n    SuggestedPrice: number;\r\n    TotalAmountDue: number;\r\n    ClientName:string ;\r\n}","export * from './account';\nexport * from './alert';\nexport * from './role';\nexport * from './fuel-quote';\nexport * from './api-response';\nexport * from './login.model';\nexport * from './fuel-quote-request';\n","export class LoginRequestModel {\r\n    UserName: string;\r\n    PasswordHash: string;\r\n}","export enum Role {\n    User = 'User',\n    Admin = 'Admin'\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, finalize } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { Account, FuelQuote, LoginRequestModel } from '@app/_models';\n\nconst baseUrl = `${environment.apiUrl}/Clients`;\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private accountSubject: BehaviorSubject<Account>;\n    public account: Observable<Account>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.accountSubject = new BehaviorSubject<Account>(null);\n        this.account = this.accountSubject.asObservable();\n        \n    }\n\n    public get accountValue(): Account {\n        return this.accountSubject.value;\n    }\n\n    login(loginRequestModel: LoginRequestModel) {\n        return this.http.post<any>(`${baseUrl}/authenticate`, loginRequestModel)\n            .pipe(map(account => {\n                this.accountSubject.next(account.Result);\n                return account;\n            }));\n    }\n\n    logout() {\n        this.accountSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(account: Account) {\n        return this.http.post(`${baseUrl}/register`, account);\n    }\n\n    update(params) {\n        return this.http.post(`${baseUrl}/update`, params)\n            .pipe(map((account: any) => {\n            console.log('account :', account);\n                // update the current account if it was updated\n                if (account.id === this.accountValue.Id) {\n                    account = { ...this.accountValue, ...account };\n                    this.accountSubject.next(account);\n                }\n                return account;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // core alert method\n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        alert.autoClose = (alert.autoClose === undefined ? true : alert.autoClose);\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FuelQuote, FuelQuoteRequestModel } from '@app/_models';\nimport { environment } from '@environments/environment';\n\nconst baseUrl = `${environment.apiUrl}/FuelQuote`;\n@Injectable({\n  providedIn: 'root'\n})\nexport class FuelQuoteService {\n\n  constructor(private http: HttpClient) { }\n\n  Add(fuelQuote: FuelQuote) {\n    return this.http.post(`${baseUrl}/add`, fuelQuote);\n  }\n\n  GetHistory(fuelQuote: FuelQuoteRequestModel) {\n    return this.http.post(`${baseUrl}/getHistory`, fuelQuote);\n  }\n}\n","export * from './account.service';\nexport * from './alert.service';\nexport * from './fuel-quote.service';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './_helpers';\n\n\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst profileModule = () => import('./profile/profile.module').then(x => x.ProfileModule);\n\nconst routes: Routes = [\n    { \n        path: '', \n        redirectTo: 'account/login', \n        pathMatch: 'full'\n       },\n    { path: 'account', loadChildren: accountModule },\n    { path: 'admin', loadChildren: profileModule, canActivate: [AuthGuard] },\n   \n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n   \n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\nimport { AccountService } from './_services';\nimport { Account, Role } from './_models';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    Role = Role;\n    account: Account;\n\n    constructor(private accountService: AccountService,private primengConfig: PrimeNGConfig) {\n        this.accountService.account.subscribe(x => this.account = x);\n        this.primengConfig.ripple = true;\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}","<div class=\"app-container\" [ngClass]=\"{ 'bg-light': account }\">\n    <!-- main nav -->\n   \n    <router-outlet name=\"subnav\"></router-outlet>\n\n    <!-- global alert -->\n    <alert></alert>\n\n    <!-- main router outlet -->\n    <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n// used to create fake backend\nimport { AppRoutingModule } from './app-routing.module';\nimport {  ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './_components';\nimport {TableModule} from 'primeng/table';\nimport { AlertService } from './_services';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        TableModule,\n        \n    ],\n    declarations: [\n        AppComponent,\n        AlertComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\nAlertService\n        // provider used to create fake backend\n        //fakeBackendProvider\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:24689/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));"],"names":[],"sourceRoot":"webpack:///"}