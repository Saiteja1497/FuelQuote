{"version":3,"file":"src_app_profile_profile_module_ts.js","mappings":"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","sources":["./src/app/profile/details.component.ts","./src/app/profile/details.component.html","./src/app/profile/fuel-history/fuel-history.component.ts","./src/app/profile/fuel-history/fuel-history.component.html","./src/app/profile/fuel-quote/fuel-quote.component.ts","./src/app/profile/fuel-quote/fuel-quote.component.html","./src/app/profile/layout.component.ts","./src/app/profile/layout.component.html","./src/app/profile/my-profile/my-profile.component.ts","./src/app/profile/my-profile/my-profile.component.html","./src/app/profile/profile-routing.module.ts","./src/app/profile/profile-update/update.component.ts","./src/app/profile/profile-update/update.component.html","./src/app/profile/profile.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'details.component.html' })\nexport class DetailsComponent {\n    account = this.accountService.accountValue;\n\n    constructor(private accountService: AccountService) { }\n}","<h1>My Profile</h1>\n<p>\n    <strong>Name: </strong> {{account.UserName}}<br />\n</p>\n<p><a routerLink=\"update\">Update Profile</a></p>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiResponseModel, FuelQuote, FuelQuoteRequestModel } from '@app/_models';\nimport { AccountService, FuelQuoteService } from '@app/_services';\n\n@Component({\n  selector: 'app-fuel-history',\n  templateUrl: './fuel-history.component.html',\n  styleUrls: ['./fuel-history.component.less']\n})\nexport class FuelHistoryComponent implements OnInit {\n  products2: FuelQuote[];\n  account = this.accountService.accountValue;\n  constructor(private accountService: AccountService,\n    private fuelQuoteService: FuelQuoteService) { }\n\n  ngOnInit(): void {\n    const fuelQouteMOdel = {\n      ClientId: this.account.Id,\n      RoleId: +this.account.Role\n    } as FuelQuoteRequestModel;\n    this.fuelQuoteService.GetHistory(fuelQouteMOdel).subscribe((data: ApiResponseModel) => {\n      if (data.StatusCode == 200) {\n        this.products2 = data.Result;\n      }\n    })\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2>Fuel History</h2>\n        <a routerLink=\"/admin/fuel-quote\" href=\"\" class=\"btn btn-primary\" style=\"align-self: right\">+ Add Quote</a>\n    </div>\n    <div class=\"card-body\">\n            <p-table [value]=\"products2\" sortMode=\"multiple\">\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th pSortableColumn=\"ClientName\">Client <p-sortIcon field=\"ClientName\"></p-sortIcon></th>\n                        <th pSortableColumn=\"GallonsRequested\">Gallons Requested <p-sortIcon field=\"GallonsRequested\"></p-sortIcon></th>\n                        <th pSortableColumn=\"DeliveryDate\">Delivery Date <p-sortIcon field=\"DeliveryDate\"></p-sortIcon></th>\n                        <th pSortableColumn=\"DiliveryAddress\">Delivery Address <p-sortIcon field=\"DiliveryAddress\"></p-sortIcon></th>\n                        <th pSortableColumn=\"SuggestedPrice\">Suggested Price <p-sortIcon field=\"SuggestedPrice\"></p-sortIcon></th>\n                        <th pSortableColumn=\"TotalAmountDue\">Total Amount Due <p-sortIcon field=\"TotalAmountDue\"></p-sortIcon></th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-product>\n                    <tr>\n                        <td>{{product.ClientName}}</td>\n                        <td>{{product.GallonsRequested}}</td>\n                        <td>{{product.DeliveryDate | date : 'dd-MMM-yyyy'}}</td>\n                        <td>{{product.DiliveryAddress}}</td>\n                        <td>{{product.SuggestedPrice | currency: 'USD'}}</td>\n                        <td>{{product.TotalAmountDue | currency: 'USD'}}</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n       \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiResponseModel } from '@app/_models';\nimport { AccountService, AlertService, FuelQuoteService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-fuel-quote',\n  templateUrl: './fuel-quote.component.html',\n  styleUrls: ['./fuel-quote.component.less']\n})\nexport class FuelQuoteComponent implements OnInit {\n  form: FormGroup;\n  loading = false;\n  submitted = false;\n  deleting = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private alertService: AlertService,\n    private fuelQuoteService:FuelQuoteService,\n    private accountService: AccountService,\n  ) { }\n  account = this.accountService.accountValue;\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      ClientId: [this.account.Id, Validators.required],\n      GallonsRequested: ['', Validators.required],\n      DiliveryAddress: ['', Validators.required],\n      DeliveryDate: ['', Validators.required],\n      SuggestedPrice: ['', [Validators.required]],\n      TotalAmountDue: ['', [Validators.required]],\n  });\n  }\n\n   // convenience getter for easy access to form fields\n   get f() { return this.form.controls; }\n\n   onSubmit() {\n    this.submitted = true;\n\n    // // reset alerts on submit\n    this.alertService.clear();\n\n    // // stop here if form is invalid\n    if (this.form.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    this.fuelQuoteService.Add(this.form.value)\n        .pipe(first())\n        .subscribe({\n            next: (result:ApiResponseModel) => {\n              this.loading = false;\n                this.alertService.success('Save successful', { keepAfterRouteChange: true });\n               this.router.navigate(['/admin/fuel-history'], { relativeTo: this.route });\n            },\n            error: error => {\n                this.alertService.error(error);\n                this.loading = false;\n            }\n        });\n}\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2>Add Quote</h2>\n    </div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card-body\">\n            <div class=\"form-row\">\n                <div class=\"form-group col-4\">\n                    <label>Gallons Requested</label>\n                    <input type=\"text\" formControlName=\"GallonsRequested\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.GallonsRequested.errors }\" />\n                </div>\n                <div class=\"form-group col-4\">\n                    <label>Delivery Date</label>\n                    <input type=\"date\" formControlName=\"DeliveryDate\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.DeliveryDate.errors }\" />\n                </div>\n                <div class=\"form-group col-2\">\n                    <label>Suggested Price</label>\n                    <input type=\"number\" formControlName=\"SuggestedPrice\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.SuggestedPrice.errors }\" />\n                </div>\n                <div class=\"form-group col-2\">\n                    <label>Total Amount Due</label>\n                    <input type=\"number\" formControlName=\"TotalAmountDue\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.TotalAmountDue.errors }\" />\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col\">\n                    <label>Delivery Address</label>\n                    <textarea type=\"text\" formControlName=\"DiliveryAddress\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.DiliveryAddress.errors }\"></textarea>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer\">\n            <button type=\"submit\" [disabled]=\"loading\" class=\"btn btn-primary mr-2\">\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Save\n            </button>\n            <a routerLink=\"../\" href=\"\" class=\"btn btn-danger\">Cancel</a>\n        </div>\n    </form>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { \n     account = this.accountService.accountValue; \n\n    constructor(private accountService: AccountService, private router: Router) \n    {\n        if(this.account.FullName==null || this.account.Address1==null || this.account.Address2==null || this.account.State==null || this.account.Zipcode==null){\n            this.router.navigate(['admin/update']);\n        }\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}","<nav class=\"navbar navbar-expand navbar-dark bg-dark justify-content-between\">\n        <div class=\"navbar-nav\">\n            <a routerLink=\"/admin\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" class=\"nav-item nav-link\">Home</a>\n            <!--<a routerLink=\"fuel-quote\" routerLinkActive=\"active\" class=\"nav-item nav-link\">Fuel Quote</a>\n            <a routerLink=\"fuel-history\" routerLinkActive=\"active\" class=\"nav-item nav-link\">Fuel History</a>!-->\n            <a routerLink=\"myprofile\" routerLinkActive=\"active\" class=\"nav-item nav-link\">My Profile</a>\n        </div>\n        <div class=\"navbar-nav\">\n            <span class=\"nav-item nav-link\">{{account.UserName}}  &nbsp;| </span>\n            <a (click)=\"logout()\" class=\"nav-item nav-link\">Logout</a>\n          </div>\n    </nav>\n\n   \n<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.less']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p><a routerLink=\"../update\">Update My Profile</a></p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { DetailsComponent } from './details.component';\nimport { UpdateComponent } from './profile-update/update.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { FuelQuoteComponent } from './fuel-quote/fuel-quote.component';\nimport { FuelHistoryComponent } from './fuel-history/fuel-history.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: DetailsComponent },\n            { path: 'update', component: UpdateComponent },\n            { path: 'myprofile', component: MyProfileComponent },\n            { path: 'fuel-quote', component: FuelQuoteComponent },\n            { path: 'fuel-history', component: FuelHistoryComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AccountService, AlertService } from '@app/_services';\n\n\n@Component({ templateUrl: 'update.component.html' })\nexport class UpdateComponent implements OnInit {\n    account = this.accountService.accountValue;\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n    deleting = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            ID: [this.account.Id, Validators.required],\n            userName: [{value:this.account.UserName,disabled:true}, {disabled: true},Validators.required],\n            fullname: [this.account.FullName, Validators.required],\n            address1: [this.account.Address1, Validators.required],\n            address2: [this.account.Address2, [Validators.required]],\n            city: [this.account.City, [Validators.required]],\n            state: [this.account.State, [Validators.required]],\n            zipcode: [this.account.Zipcode, [Validators.required]]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // // reset alerts on submit\n        this.alertService.clear();\n\n        // // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n         this.loading = true;\n        this.accountService.update(this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n\n    \n}","<div class=\"card\">\n    <div class=\"card-header\">\n        <h2>Update Profile</h2>\n    </div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"card-body\">\n            <div class=\"form-row\">\n                <div class=\"form-group col-6\">\n                    <label>User Name</label>\n                    <input type=\"text\" formControlName=\"userName\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.userName.errors }\"/>\n                </div>\n                <div class=\"form-group col-6\">\n                    <label>Full Name</label>\n                    <input type=\"text\" formControlName=\"fullname\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.fullname.errors }\" />\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-6\">\n                    <label>Address 1</label>\n                    <textarea type=\"text\" formControlName=\"address1\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.address1.errors }\"></textarea>\n                </div>\n                <div class=\"form-group col-6\">\n                    <label>Address 2</label>\n                    <textarea type=\"text\" formControlName=\"address2\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.address2.errors }\"></textarea>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-4\">\n                    <label>State</label>\n                    <select formControlName=\"state\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.state.errors }\">\n                        <option value=\"\"></option>\n                        <option value=\"GJ\">Gujarat</option>\n                    </select>\n                </div>\n                <div class=\"form-group col-4\">\n                    <label>City</label>\n                    <input type=\"text\" formControlName=\"city\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\" />\n                </div>\n                <div class=\"form-group col-4\">\n                    <label>Zip Code</label>\n                    <input type=\"text\" formControlName=\"zipcode\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.zipcode.errors }\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer\">\n            <button type=\"submit\" [disabled]=\"loading\" class=\"btn btn-primary mr-2\">\n                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Update\n            </button>\n            <!-- <button type=\"button\" (click)=\"onDelete()\" [disabled]=\"deleting\" class=\"btn btn-danger\">\n                <span *ngIf=\"deleting\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Delete\n            </button> -->\n            <a routerLink=\"../\" href=\"\" class=\"btn btn-link\">Cancel</a>\n            </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { DetailsComponent } from './details.component';\nimport { UpdateComponent } from './profile-update/update.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { FuelQuoteComponent } from './fuel-quote/fuel-quote.component';\nimport { FuelHistoryComponent } from './fuel-history/fuel-history.component';\nimport {TableModule} from 'primeng/table';\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        ProfileRoutingModule,\n        TableModule\n    ],\n    declarations: [\n        LayoutComponent,\n        DetailsComponent,\n        UpdateComponent,\n        MyProfileComponent,\n        FuelQuoteComponent,\n        FuelHistoryComponent\n    ]\n})\nexport class ProfileModule { }"],"names":[],"sourceRoot":"webpack:///"}